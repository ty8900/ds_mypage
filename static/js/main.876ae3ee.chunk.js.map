{"version":3,"sources":["components/Icons.js","components/Title.js","components/Maintext.js","App.js","serviceWorker.js","index.js"],"names":["Icons","className","id","onClick","window","location","href","size","Component","Title","Maintext","state","first","src1","src2","txt1","txt2","rotate","setState","setInterval","this","src","txt","width","height","alt","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iUAyBeA,G,6KAfP,OACI,yBAAKC,UAAU,SACf,uCACA,kBAAC,IAAD,CACQC,GAAG,cACHC,QAAS,kBAAIC,OAAOC,SAASC,KAAK,6BAClCC,KAAK,SACb,kBAAC,IAAD,CACQL,GAAG,aACHC,QAAS,kBAAIC,OAAOC,SAASC,KAAK,2BAClCC,KAAK,c,GAbLC,cC2CLC,G,6KA3CP,OACI,yBAAKR,UAAU,oBACX,wBAAIC,GAAG,SAAP,uCAEA,6BACA,yBAAKD,UAAU,aACf,yBAAKA,UAAU,YACd,4CAGA,sJAGA,4QAGK,6BACL,4CAGA,+HACwC,6BAAK,+BAG9C,yBAAKA,UAAU,aACd,qEAGA,mGACuE,6BAAK,6BAD5E,iEAEsE,6BAFtE,6CAG8C,6BAAK,6BAHnD,sDAI2D,6BAJ3D,kFAKiC,6BAAK,6BALtC,yCAM8C,6BAN9C,mKAOiD,qC,GAtC9CO,cCyDLE,G,kNAtDXC,MAAO,CACHC,OAAO,EACPC,KAAM,CAAC,kCAAkC,kCACzC,kCAAkC,mCAClCC,KAAM,CAAC,kCAAkC,kCACzC,kCAAkC,mCAClCC,KAAM,CAAC,mBAAoB,kBAAmB,uBAAwB,gBACtEC,KAAM,CAAC,oBAAqB,2BAA4B,+BAAgC,e,EAO5FC,OAAS,WACL,EAAKC,SAAS,CAACN,OAAQ,EAAKD,MAAMC,S,kEAJlCO,YAAYC,KAAKH,OAAQ,O,+BASzB,IAAII,EAAIC,EAQR,OAPGF,KAAKT,MAAMC,OACVS,EAAMD,KAAKT,MAAME,KACjBS,EAAMF,KAAKT,MAAMI,OAEjBM,EAAMD,KAAKT,MAAMG,KACjBQ,EAAMF,KAAKT,MAAMK,MAGjB,yBAAKf,UAAU,YACf,yBAAKA,UAAU,QACX,2CAEJ,yBAAKA,UAAU,kBACd,yBAAKA,UAAU,SACZ,yBAAKoB,IAAKA,EAAI,GAAIE,MAAM,MAAKC,OAAO,MAAKC,IAAI,UAC7C,4BAAKH,EAAI,KAEZ,yBAAKrB,UAAU,QACZ,yBAAKoB,IAAKA,EAAI,GAAIE,MAAM,MAAKC,OAAO,MAAKC,IAAI,aAC7C,4BAAKH,EAAI,KAEZ,yBAAKrB,UAAU,MACZ,yBAAKoB,IAAKA,EAAI,GAAIE,MAAM,MAAKC,OAAO,MAAKC,IAAI,WAC7C,4BAAKH,EAAI,KAEZ,yBAAKrB,UAAU,MACZ,yBAAKoB,IAAKA,EAAI,GAAIE,MAAM,MAAKC,OAAO,MAAKC,IAAI,YAC7C,4BAAKH,EAAI,W,GAjDFd,cCeRkB,MAdf,WACE,OACE,yBAAKzB,UAAU,OACb,yBAAKA,UAAU,cACd,kBAAC,EAAD,OAED,yBAAKA,UAAU,YACf,kBAAC,EAAD,OAEA,kBAAC,EAAD,QCJc0B,QACW,cAA7BvB,OAAOC,SAASuB,UAEe,UAA7BxB,OAAOC,SAASuB,UAEhBxB,OAAOC,SAASuB,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.876ae3ee.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { GoMarkGithub, GoMail } from 'react-icons/go';\r\n\r\n\r\nimport \"./Icons.css\";\r\n\r\n\r\nclass Icons extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"icons\">\r\n            <h4>Contact</h4>\r\n            <GoMarkGithub\r\n                    id='github_icon'\r\n                    onClick={()=>window.location.href='https://github.com/ty8900'}\r\n                    size='50px'></GoMarkGithub>\r\n            <GoMail\r\n                    id='email_icon'\r\n                    onClick={()=>window.location.href='mailto:ty8900@naver.com'}\r\n                    size='50px'></GoMail>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Icons;","import React, { Component } from 'react';\r\nimport \"./Title.css\";\r\n\r\n\r\nclass Title extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"title_background\">\r\n                <h1 id=\"title\"> \r\n                    Heo Dong Seok (허동석) </h1>\r\n                <hr/>\r\n                <div className=\"container\">\r\n                <div className=\"leftside\">\r\n                 <h2>\r\n                     학력\r\n                 </h2>\r\n                 <h3>\r\n                     서울대학교 컴퓨터공학부 18학번 5학기 이수(2018/3~)\r\n                 </h3>\r\n                 <h5>\r\n                     주요과목 : 시스템 프로그래밍, 소프트웨어 개발의 원리와 실습,\r\n                     컴퓨터구조, 데이터베이스 등\r\n                 </h5><br/>\r\n                 <h2>\r\n                     활동\r\n                 </h2>\r\n                 <h3>\r\n                     2020 인공지능 온라인 경진대회 (2020/6, 62/400팀)<br/><br/>\r\n                 </h3>\r\n                </div>\r\n                <div className=\"rightside\">\r\n                 <h2>\r\n                     주요 프로젝트\r\n                 </h2>\r\n                 <h3>\r\n                     &middot; Unity 2D RPG Game 3인 project 'DSsoldier' (2019/7, stopped)<br/><br/>\r\n                     &middot; SNU wiki/petition website 'SNUVOICE' (2019/9~12, in SWPP)<br/>\r\n                     >> https://github.com/swsnu/swpp2019-team8<br/><br/>\r\n                     &middot; NC Winter Internship in Game AI Lab (2020/1~2)<br/>\r\n                     >> Match-3 game에의 강화 학습 적용 연구<br/><br/>\r\n                     &middot; Instru salvage project (2020/7~8)<br/>\r\n                     >> 대학동아리 Cyworld club 데이터 네이버 카페로 크롤링/복원 프로젝트<br/>\r\n                 </h3>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Title;","import React, { Component } from 'react';\r\n\r\n\r\nimport \"./Maintext.css\";\r\n\r\n\r\nclass Maintext extends Component {\r\n    state= {\r\n        first: true,\r\n        src1: [\"https://i.imgur.com/qrUIMrO.png\",\"https://i.imgur.com/s7Az9GU.png\",\r\n        \"https://i.imgur.com/JgUpSbv.png\",\"https://i.imgur.com/d0gudhD.png\"],\r\n        src2: [\"https://i.imgur.com/OS2jRQv.png\",\"https://i.imgur.com/wOQjhzP.png\",\r\n        \"https://i.imgur.com/Sj41S11.png\",\"https://i.imgur.com/jC7kMih.png\"],\r\n        txt1: [\"2d rpg DSSoldier\", \"SNUVOICE Poster\", \"revised match-3 game\", \"cyworld club\"],\r\n        txt2: [\"simple dodge game\", \"SNUVOICE petition sample\", \"success rate of my dqn model\", \"naver cafe\"]\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(this.rotate, 8000);\r\n    }\r\n\r\n    rotate = () => {\r\n        this.setState({first: !this.state.first});\r\n    }\r\n\r\n\r\n    render() {  \r\n        var src,txt; \r\n        if(this.state.first) {\r\n            src = this.state.src1;\r\n            txt = this.state.txt1;\r\n        } else {\r\n            src = this.state.src2;\r\n            txt = this.state.txt2;\r\n        }\r\n        return (\r\n            <div className=\"Maintext\">\r\n            <div className=\"what\">\r\n                <h1>What I did</h1>\r\n            </div>\r\n            <div className=\"main_container\">\r\n             <div className=\"unity\">\r\n                <img src={src[0]} width='450'height='350'alt=\"unity\"></img>\r\n                <h4>{txt[0]}</h4>\r\n             </div>\r\n             <div className=\"swpp\">\r\n                <img src={src[1]} width='450'height='350'alt=\"snuvoice\"></img>\r\n                <h4>{txt[1]}</h4>\r\n             </div>\r\n             <div className=\"nc\">\r\n                <img src={src[2]} width='450'height='350'alt=\"match3\"></img>\r\n                <h4>{txt[2]}</h4>\r\n             </div>\r\n             <div className=\"cy\">\r\n                <img src={src[3]} width='450'height='350'alt=\"cyworld\"></img>\r\n                <h4>{txt[3]}</h4>\r\n             </div>\r\n            </div></div>\r\n        );\r\n    }\r\n}\r\nexport default Maintext;","import React from 'react';\nimport './App.css';\nimport Icons from './components/Icons'\nimport Title from './components/Title'\nimport Maintext from './components/Maintext'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"background\">\n       <Title />\n      </div>\n      <div className=\"maintext\">\n      <Maintext />\n      </div>\n      <Icons/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}